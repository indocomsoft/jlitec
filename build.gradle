/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'checkstyle'

    // JFlex plugins
    id "org.xbib.gradle.plugin.jflex" version "1.4.0"
    // CUP plugin
    id "cup.gradle.cup-gradle-plugin" version "1.2"

    // google-java-format plugin
    id 'com.github.sherter.google-java-format' version '0.9'

    // TODO: re-enable after https://github.com/spotbugs/spotbugs/pull/1277 is released
    // id "com.github.spotbugs" version "4.5.0"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

def versions = [checkstyle: '8.36', googleJavaFormat: '1.9', spotbugs: '4.1.2']

configurations {
    checkstyleConfig
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'net.sourceforge.argparse4j:argparse4j:0.8.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

    // Use the default Google style checkstyle
    checkstyleConfig("com.puppycrawl.tools:checkstyle:${versions.checkstyle}") {
        transitive = false
    }
}

sourceSets {
    main {
        jflex {
            srcDir "src/main/jflex"
        }
        java {
            srcDir "$buildDir/generated-src/jflex"
        }
    }
}

jflex {
    verbose = true
    no_backup = true
}

cup {
    args = [
        /*
        Expect 1 conflict due to ambiguity of PLUS:
        *** Reduce/Reduce conflict found in state #45
        between S ::= Atom (*)
        and     Ftr ::= Atom (*)
        under symbols: {PLUS}
        Resolved in favor of the second production.
        */
        "-expect", "1"
    ]
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '--enable-preview' << '-Xlint:all,-preview,-serial'
}

tasks.withType(Test) {
    jvmArgs('--enable-preview')
}

tasks.withType(JavaExec) {
    jvmArgs('--enable-preview')
}

application {
    // Define the main class for the application.
    mainClassName = 'jlitec.App'
}

jar {
    manifest {
        attributes 'Main-Class': 'jlitec.App'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

googleJavaFormat {
    toolVersion = "${versions.googleJavaFormat}"
}

checkstyle {
    toolVersion = "${versions.checkstyle}"
    config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, 'google_checks.xml')
    checkstyleMain.source = "src/main/java"
}

// TODO: re-enable after https://github.com/spotbugs/spotbugs/pull/1277 is released
// spotbugs {
//     excludeFilter = file("config/spotbugs_exclude.xml")
//     toolVersion = "${versions.spotbugs}"
// }
//
// spotbugsMain {
//     reports {
//         html {
//             enabled = true
//             destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
//             stylesheet = 'fancy-hist.xsl'
//         }
//     }
// }
//
// spotbugsTest {
//     reports {
//         html {
//             enabled = true
//             destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
//             stylesheet = 'fancy-hist.xsl'
//         }
//     }
// }
